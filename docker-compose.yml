version: '3'

services:

  order-db:
    image: mongo:latest
    container_name: order-db
    restart: always
    networks:
      - orchestrator-saga
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=123456
    ports:
      - "27017:27017"

  product-db:
    image: postgres:latest
    container_name: product-db
    networks:
      - orchestrator-saga
    environment:
      - POSTGRES_DB=product-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
    ports:
      - "5432:5432"

  payment-db:
    image: postgres:latest
    container_name: payment-db
    networks:
      - orchestrator-saga
    environment:
      - POSTGRES_DB=payment-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
    ports:
      - "5433:5432"

  inventory-db:
    image: postgres:latest
    container_name: inventory-db
    networks:
      - orchestrator-saga
    environment:
      - POSTGRES_DB=inventory-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=123456
    ports:
      - "5434:5432"

  broker:
    image: apache/kafka:latest
    hostname: broker
    container_name: broker
    ports:
      - '9092:9092'
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT_HOST://localhost:9092,PLAINTEXT://broker:19092'
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@broker:29093'
      KAFKA_LISTENERS: 'CONTROLLER://:29093,PLAINTEXT_HOST://:9092,PLAINTEXT://:19092'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      CLUSTER_ID: '4L6g3nShT-eMCtK--X86sw'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
    volumes:
        - './data/kafka/data:/var/lib/kafka/data'
    networks:
      - orchestrator-saga

  redpanda-console:
    container_name: redpanda
    image: docker.redpanda.com/vectorized/console:latest
    restart: on-failure
    entrypoint: /bin/sh
    command: -c "echo \"$$CONSOLE_CONFIG_FILE\" > /tmp/config.yml; /app/console"
    ports:
      - "8081:8080"
    networks:
      - orchestrator-saga
    environment:
      CONFIG_FILEPATH: /tmp/config.yml
      CONSOLE_CONFIG_FILE: |
        kafka:
          brokers: ["broker:19092"]
    depends_on:
      - broker

  order-service:
    build: "./order-service"
    container_name: order-service
    depends_on:
      - order-db
      - broker
    networks:
      - orchestrator-saga
    environment:
      - KAFKA_BROKER=broker:19092
      - MONGO_DB_URI=mongodb://admin:123456@order-db:27017
    ports:
      - "3000:3000"

  orchestrator-service:
    build: "./orchestrator-service"
    container_name: orchestrator-service
    depends_on:
      - broker
    networks:
      - orchestrator-saga
    environment:
      - KAFKA_BROKER=broker:19092
    ports:
      - "8080:8080"

  product-validation-service:
    build: "./product-validation-service"
    container_name: product-validation-service
    depends_on:
      - product-db
      - broker
    networks:
      - orchestrator-saga
    environment:
      - KAFKA_BROKER=broker:19092
      - DB_HOST=product-db
      - DB_PORT=5432
      - DB_NAME=product-db
      - DB_USER=postgres
      - DB_PASSWORD=123456
    ports:
      - "8090:8090"

  payment-service:
    build: "./payment-service"
    container_name: payment-service
    depends_on:
      - payment-db
      - broker
    networks:
      - orchestrator-saga
    environment:
      - KAFKA_BROKER=broker:19092
      - DB_HOST=payment-db
      - DB_PORT=5432
      - DB_NAME=payment-db
      - DB_USER=postgres
      - DB_PASSWORD=123456
    ports:
      - "8091:8091"

  inventory-service:
    build: "./inventory-service"
    container_name: inventory-service
    depends_on:
      - inventory-db
      - broker
    networks:
      - orchestrator-saga
    environment:
      - KAFKA_BROKER=broker:19092
      - DB_HOST=inventory-db
      - DB_PORT=5432
      - DB_NAME=inventory-db
      - DB_USER=postgres
      - DB_PASSWORD=123456
    ports:
      - "8092:8092"

networks:
  orchestrator-saga:
    driver: bridge